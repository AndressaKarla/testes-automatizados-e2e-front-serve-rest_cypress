name: Pipeline Testes Automatizados E2E (Ponta a Ponta) Front ServeRest Cypress

# executa o workflow toda vez que for realizado um push ou pull-request no repositório
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
  # permite também executar esse workflow manualmente na aba "Actions" do GitHub
  workflow_dispatch:

jobs:
  cypress-chrome:
    # agente de execução/runner
    runs-on: ubuntu-22.04
    
    # template cypress com todas as dependências necessárias para executar os testes
    container:
      image: cypress/browsers:node18.12.0-chrome103-ff107
      # usuário com perfil administrador
      options: --user 1001
      
    steps:
      - name: Passo 1 - Obter cópia do código-fonte do repositório
        uses: actions/checkout@v4

      - name: Passo 2 - Redirecionar os conteúdos de "secrets.USUARIO_ENV", para os fixtures "usuario.json", etc
        run: echo '${{ secrets.USUARIO_ENV }}' > ./cypress/fixtures/usuario.json
        
      - name: Passo 3 - Instalar dependências, Executar testes automatizados E2E no navegador chrome em modo headless (2º plano) em um ambiente de produção e Gerar os resultados dos testes
        uses: cypress-io/github-action@v5.0.8
        with:
          # forçar, mesmo tendo possíveis conflitos, a instalação das dependências do projeto do arquivo "package.json"
          install-command: npm install --force
          # Executar testes automatizados E2E em modo headless (2º plano)
          command: npm run test
          browser: chrome
          
      - name: Passo 4 - Armazenar os resultados dos testes em vídeos
        # expressão condicional para que sempre seja executado independentemente dos resultados dos steps anteriores
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos-chrome
          path: ./cypress/videos
          # armazena por 30 dias
          retention-days: 30

      - name: Passo 5 - Armazenar os resultados dos testes em screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-chrome
          path: ./cypress/screenshots
          retention-days: 30
  
  cypress-firefox:
    # esse job "cypress-firefox" somente é executado se o job anterior "cypress-chrome" for executado com sucesso
    needs: cypress-chrome
    runs-on: ubuntu-22.04
    
    container:
      image: cypress/browsers:node18.12.0-chrome103-ff107
      options: --user 1001
      
    steps:
      - name: Passo 1 - Obter cópia do código-fonte do repositório
        uses: actions/checkout@v4

      - name: Passo 2 - Redirecionar os conteúdos de "secrets.USUARIO_ENV", para os fixtures "usuario.json", etc
        run: echo '${{ secrets.USUARIO_ENV }}' > ./cypress/fixtures/usuario.json
        
      - name: Passo 3 - Instalar dependências, Executar testes automatizados E2E no navegador firefox em modo headless (2º plano) em um ambiente de produção e Gerar os resultados dos testes
        uses: cypress-io/github-action@v5.0.8
        with:
          install-command: npm install --force
          command: npm run test:ff
          browser: firefox 

      - name: Passo 4 - Armazenar os resultados dos testes em screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-firefox
          path: ./cypress/screenshots
          retention-days: 30
